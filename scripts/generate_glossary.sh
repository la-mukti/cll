#!/bin/sh

# A POSIX variable
OPTIND=1         # Reset in case getopts has been used previously in the shell.

# Initialize our own variables:
testing=""
BUILDDIR="build/"
SCRIPTDIR="scripts/"

while getopts "h?tb:" opt; do
    case "$opt" in
    h|\?)
        echo "-t is testing mode: will replace all external xrefs in each chapter and turn off the glossary."
        echo "-b [name] is the build dir"
        exit 0
        ;;
    t)  testing="both"
        ;;
    s)  testing="solo"
        ;;
    b)  BUILDDIR="$OPTARG"
        ;;
    esac
done

shift $((OPTIND-1))

[ "$1" = "--" ] && shift

# echo "Arg Leftovers: $@"

TMPFILE="/tmp/generate_glossary.tmp.$$"

IFS='
'
initial=''
indiv=''

xsltproc --nonet --path . --novalid xml/generate_glossary.xsl $BUILDDIR/cll_preglossary.xml | grep '	' | LC_ALL=C sort | uniq >$TMPFILE

for line in $(cat $TMPFILE)
do
  if [ ! "$initial" ]
  then
    cat <<EOF
<glossary>
<title>Lojban Word Glossary</title>
<para>All definitions in this glossary are brief and unofficial.
Only the published dictionary is a truly official reference for word
definitions.  These definitions are here simply as a quick reference.
</para>

<!-- THIS FILE IS AUTOGENERATED.  DO NOT EDIT OR CHECK IN! -->

EOF
  fi

  slug=$(echo $line | awk -F'\t' '{ print $1 }')
  word=$(echo $line | awk -F'\t' '{ print $2 }' | sed 's/\.//g')
  #  echo "$slug--$word"
  newinitial=$(echo $word | cut -c 1)

  if [ "$initial" != "$newinitial" ]
  then
    if [ "$indiv" ]
    then
      echo "</glossdiv>"
    else
      indiv=1
    fi
    echo "<glossdiv><title>$newinitial</title>"
    initial=$newinitial
  fi

  if [ "$testing" ]
  then
    definition="placeholder definition"
  else
    if [ ! -f $BUILDDIR/jbovlaste.xml -o "$(find $BUILDDIR/jbovlaste.xml -mtime +1)" ]
    then
      echo "jbovlaste file is old; refetching." 1>&2
      wget 'http://jbovlaste.lojban.org/export/xml-export.html?lang=en&bot_key=z2BsnKYJhAB0VNsl' -O $BUILDDIR/jbovlaste.xml
    fi

    rm $BUILDDIR/jbovlaste2.xml
    grep '^<valsi word=' $BUILDDIR/jbovlaste.xml | \
      sed 's/^<valsi word="\([^"]*\)" /###\1### &/' >$BUILDDIR/jbovlaste2.xml

    definition=$(grep -F "###$word### " $BUILDDIR/jbovlaste2.xml | \
        sed -e 's/^[^ ]* //' | \
        sed -e 's/.*<definition>//' -e 's;</definition>.*;;' | \
        sed -e 's/\&/\&amp;/g' -e 's/</\&lt;/g' -e 's/>/\&gt;/g' | \
        sed 's/[[:space:]][[:space:]]*/ /g' | \
        $SCRIPTDIR/latex2xml.pl
      )

    if [ "$(echo $definition | grep -E '(\$|\\)')" ]
    then
      echo "UNHANDLED LATEX in definiton for $word: $definition"
    fi

    if [ ! "$(echo $definition | sed 's/[[:space:]]*//g')" ]
    then
      definition="NO JBOVLASTE DEFINITION FOR \"$word\" FOUND!"
      echo $definition 1>&2
    fi
  fi

  cat <<EOF
<glossentry xml:id="valsi-$slug">
<glossterm>$word</glossterm>
<glossdef>
  <para>$definition</para>
</glossdef>
</glossentry>
EOF
done

if [ "$initial" ]
then
  cat <<EOF

</glossdiv>
</glossary>

EOF
fi

rm $TMPFILE
